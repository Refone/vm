#!/bin/bash

if [ "$1" == "" ]; then
		echo "Usage: create-img <image.cfg>"
		echo "Example: create-img create.cfg "
		echo "		-- It will create an VM image as create.cfg state"
		echo "To get more information, look through the template create.cfg" 
		exit 0
fi

if [ ! -e $1 ]; then
		echo "$1 not found."
		exit 0
fi

if [ ! -e "IMG" ]; then
		mkdir "IMG"
fi

typeset -A config
config=(
	[VM_NAME]="egg"
	[VM_SIZE]="5G"
	[VM_FORMAT]="ext4"
	[ROOTFS_BASE]=""
	[KERNEL_SOURCE]=""
)

while read line
do
		if echo $line | grep -F = &>/dev/null
		then
				varname=$(echo "$line" | cut -d '=' -f 1)
				config[$varname]=$(echo "$line" | cut -d '=' -f 2-)
		fi
done < $1

size_d=$(echo ${config[VM_SIZE]} | grep '[1-9][0-9]*[kmgKMG]')
if [ "$size_d" == "" ]; then
		echo "Size define error in $1"
		exit 0
fi

name_prefix="qemu-img-"
name_suffix=".img"
IMG="$name_prefix""${config[VM_NAME]}""$name_suffix"
IMG_DIR=./IMG/${config[VM_NAME]}/

if [ -e "$IMG_DIR" ]; then
		echo "$IMG has already exist."
		exit 0
fi

# if any command goes wrong, we terminate this script.
set -e	

echo "Creating qemu image $IMG ..."

# Making rootfs
mkdir $IMG_DIR
qemu-img create $IMG_DIR$IMG ${config[VM_SIZE]}
echo "$IMG_DIR$IMG"
mkfs.${config[VM_FORMAT]} $IMG_DIR$IMG
ROOTFS="$IMG_DIR"rootfs
rm -rf $ROOTFS && install -d $ROOTFS
sudo mount -o loop "$IMG_DIR"$IMG $ROOTFS
sudo rm -rf $ROOTFS/lost+found
sudo apt-get install qemu qemu-user-static binfmt-support debootstrap

sudo tar -xzf ${config[ROOTFS_BASE]} -C $ROOTFS
sudo cp -a /usr/bin/qemu-$(uname -m)-static $ROOTFS/usr/bin/
echo "Loading kernel modules..."
sudo make -C ${config[KERNEL_SOURCE]} modules_install INSTALL_MOD_PATH=$ROOTFS 1>/dev/null 2>&1

# Write /etc/ configures
echo "Wrting default configures..."
echo ${config[VM_NAME]}-vm > "$IMG_DIR"hostname
sudo chmod 644 "$IMG_DIR"hostname

echo "127.0.0.1		localhost" > "$IMG_DIR"hosts
sudo chmod 644 "$IMG_DIR"hosts

# echo "source /etc/network/interfaces.d/*" > "$IMG_DIR"interfaces
# echo "auto lo" >> "$IMG_DIR"interfaces
# echo "iface lo inet loopback" >> "$IMG_DIR"interfaces
# echo "auto ens3" >> "$IMG_DIR"interfaces
# echo "iface ens3 inet dhcp" >> "$IMG_DIR"interfaces
# sudo chmod 644 "$IMG_DIR"interfaces
# sudo cp "$IMG_DIR"interfaces $ROOTFS/etc/network/

sudo cp /etc/resolv.conf $ROOTFS/etc/
sudo cp "$IMG_DIR"hostname "$IMG_DIR"hosts $ROOTFS/etc/

# Umount
sudo sync
sudo umount $ROOTFS

echo "$IMG created done."
echo "Type following thing after change root:"
echo "passwd root"
echo "useradd -G sudo -m -s /bin/bash <user_name>"
echo "echo <user_name>:<password> | chpasswd"
echo "ln -s /lib/systemd/system/serial-getty\@.service /etc/systemd/system/getty.target.wants/getty@tty1.service"
echo "apt-get update"
echo "apt-get install ifupdown net-tools vim sudo ssh udev"
